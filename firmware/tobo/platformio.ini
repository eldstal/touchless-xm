; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs: tobo

[env:tobo]
platform = atmelavr
framework = arduino

# Program via USB-to-serial adapter
# This will only work if the board already
# has the bootloader.
# pio run --env avrisp2 --target bootloader
upload_port = /dev/ttyUSB0
upload_protocol = arduino
upload_speed = 38400

# An external 16MHz crystal
#board = pro16MHzatmega328
#board_build.f_cpu = 16000000L

# Internal 8MHz oscillator
board = pro8MHzatmega328
board_build.f_cpu = 8000000L
board_hardware.oscillator = internal
board_fuses.lfuse = 0xE2
board_fuses.hfuse = 0xDA
board_fuses.unlock_bits = 0xFF
board_fuses.lock_bits = 0xCF
board_bootloader.lfuse = 0xE2
board_bootloader.hfuse = 0xDA
board_bootloader.unlock_bits = 0xFF
board_bootloader.lock_bits = 0xCF

# Optiboot, compiled for 8MHz and 38400 baud
# The standard 8MHz bootloader runs at 57600, which gave me stability issues
# during programming.
board_bootloader.file = ../bootloader/optiboot_atmega328_8mhz_38400.hex


# Use this to burn the bootloader onto a fresh board
# if you have an AVRISPMK2
[env:avrispv2]
extends = env:tobo

# avrdude
upload_protocol = avrispv2
upload_flags = -F
    -P/dev/ttyUSB0


# TODO: An env for using an arduino as an ISP